// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model PokerTournament {
  id              Int       @id @default(autoincrement())
  name            String    @map("Name")
  uid             String    @map("UID")
  bustTime        BigInt?   @map("Bust_Time")
  bustRound       Int?      @map("Bust_Round")
  hitman          String?   @map("Hitman")
  placement       Int?      @map("Placement")
  knockouts       Int?      @map("Knockouts")
  startPoints     Int?      @map("Start_Points")
  hitPoints       Int?      @map("Hit_Points")
  placementPoints Int?      @map("Placement_Points")
  cash            Int?      @map("Cash")
  place           String?   @map("Place")
  season          String?   @map("Season")
  venue           String?   @map("Venue")
  totalPoints     Int?      @map("Total_Points")
  playerScore     Float?    @map("Player_Score")
  fileName        String?   @map("File_name")
  createdAt       DateTime  @default(now()) @map("created_at")
  gameDate        DateTime? @map("game_date")

  @@map("poker_tournaments")
}

model ProcessedFile {
  id                  Int      @id @default(autoincrement())
  filename            String   @unique
  processed_at        DateTime @default(now()) @map("processed_at")
  status              Status
  error_message       String?  @map("error_message") @db.Text
  drive_file_id       String   @map("drive_file_id")
  md5_checksum        String?  @map("md5_checksum")
  drive_modified_time DateTime @map("drive_modified_time")
  game_uid            String?  @map("game_uid")

  @@map("processed_files")
}

enum Status {
  success
  error
}

model Player {
  uid        String   @id
  name       String
  nickname   String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("players")
}
