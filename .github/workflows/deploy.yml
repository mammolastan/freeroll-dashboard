name: Build and Deploy
on:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: Create deployment package
        run: |
          tar -czf deployment.tar.gz \
            .next \
            package.json \
            package-lock.json \
            next.config.js \
            ecosystem.config.js \
            public \
            prisma

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: deployer
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export PATH="/home/deployer/.npm-global/bin:$PATH"
            cd /var/www/freeroll-dashboard

            # Stop PM2 process first
            $HOME/.npm-global/bin/pm2 delete freeroll-dashboard || true

            # Backup important files
            mv .env .env.backup || true

            # Clean the directory while preserving important files
            find . -mindepth 1 -not -name '.env.backup' -delete

            # Create deployment directory structure
            mkdir -p prisma

            # Copy deployment package
            echo "Waiting for deployment.tar.gz..."

            # Extract new files
            tar xzf deployment.tar.gz
            rm deployment.tar.gz

            # Restore .env
            mv .env.backup .env

            # Clean install with increased memory limit
            export NODE_OPTIONS="--max_old_space_size=1024"
            npm cache clean --force
            # Use regular npm install instead of npm ci since we have the package-lock.json now
            npm install --production

            # Handle Prisma separately
            npm install prisma --save-dev
            npx prisma generate

            # Update permissions
            chmod -R 775 .

            # Restart using PM2
            $HOME/.npm-global/bin/pm2 start ecosystem.config.js
            $HOME/.npm-global/bin/pm2 save

            # Verify deployment
            sleep 5
            if ! $HOME/.npm-global/bin/pm2 show freeroll-dashboard | grep -q "online"; then
              echo "Process failed to start!"
              exit 1
            fi
          command_timeout: 600s
