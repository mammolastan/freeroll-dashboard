name: Build and Deploy
on:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: Create deployment package
        run: |
          tar -czf deployment.tar.gz \
            .next \
            package.json \
            package-lock.json \
            next.config.js \
            ecosystem.config.js \
            public \
            prisma

      - name: Test SSH connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: deployer
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: echo "SSH connection successful"
          timeout: 60s

      - name: Install rsync
        run: sudo apt-get install -y rsync

      - name: Deploy to Digital Ocean
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: deployment.tar.gz
          remote_path: /var/www/freeroll-dashboard/
          remote_host: ${{ secrets.DROPLET_IP }}
          remote_user: deployer
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Finalize deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: deployer
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export PATH="/home/deployer/.npm-global/bin:$PATH"
            cd /var/www/freeroll-dashboard

            # Extract new files
            tar -xzf deployment.tar.gz
            rm deployment.tar.gz

            # Clean install with increased memory limit
            export NODE_OPTIONS="--max_old_space_size=1024"
            rm -rf node_modules
            npm cache clean --force
            npm ci --production --ignore-scripts

            # Handle Prisma separately
            npm install prisma --save-dev
            npx prisma generate

            # Update permissions
            chmod -R 755 .next

            # Restart using PM2
            $HOME/.npm-global/bin/pm2 delete freeroll-dashboard || true
            $HOME/.npm-global/bin/pm2 start ecosystem.config.js
            $HOME/.npm-global/bin/pm2 save

            # Verify deployment
            sleep 5
            if ! $HOME/.npm-global/bin/pm2 show freeroll-dashboard | grep -q "online"; then
              echo "Process failed to start!"
              exit 1
            fi
